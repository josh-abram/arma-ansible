---
- name: add i386 architecture
  shell: dpkg --add-architecture i386

- name: create user for steamcmd
  user:
    name: "{{ steamcmd_user }}"
    state: present
    comment: User for Steam/SteamCMD

- name: install dependencies for SteamCMD and other useful packages
  apt:
    update_cache: yes
    pkg:
    - lib32gcc1
    - lib32stdc++6
    - python3
    - fail2ban
    - htop
    - nethogs

- name: create Arma profiles directorys
  file: path="{{ steamcmd_user_home }}.local/share/{{ item }}" state=directory
  with_items:
    - "Arma 3"
    - "Arma 3 - Other Profiles"
    - "Arma 3 - Other Profiles/server"

- name: create steamcmd directory
  file:
    path: "{{ steamcmd_directory }}"
    state: directory

- name: unzip steamcmd tar
  unarchive:
    src: https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz
    dest: "{{ steamcmd_directory }}"
    remote_src: yes

- name: set steamcmd as executable
  file:
    path: "{{ steamcmd_directory }}steamcmd.sh"
    mode: +x

- name: open firewall ports
  ufw:
    rule: allow
    port: 2302:2304 #Client, Steam Query, Steam Master
    proto: udp

- name: Run SteamCMD and Install ARMA (Will take a long time on first run)
  shell: "./steamcmd.sh +login {{ steam_username }} {{ steam_password }} {{steam_guard}} +force_install_dir {{ steam_server_directory }} +app_update 233780 +quit"
  args:
    chdir: "{{ steamcmd_directory }}"

- name: Building ARMA3 service file to /etc/systemd/system
  template:
    src: arma3server.service.j2
    dest: "/etc/systemd/system/arma3server.service"
    #owner: "{{ steamcmd_user }}"
    #group: "{{ steamcmd_user }}"
    #mode: '0600'

- name: Starting ARMA3 service
  service: 
    name: arma3server
    enabled: yes
    state: restarted